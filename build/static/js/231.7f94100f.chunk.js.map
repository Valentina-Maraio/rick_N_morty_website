{"version":3,"file":"static/js/231.7f94100f.chunk.js","mappings":"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","sources":["components/DetailBanner.js","components/Slider.js","pages/Details.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Favs from \"../assets/Fav_counter.png\";\nimport \"../styles/detail_banner.css\";\n//import \"../styles/slider.css\";\n\nconst DetailBanner = () => {\n  const location = useLocation();\n  const character = location.state.character;\n  return (\n    <>\n      {character && (\n        <>\n        <div className=\"character\">\n          <div className=\"character_foto\">\n            <img\n            className=\"thumbnail\"\n              src={`${character.image}`}\n              alt={character.name}\n            />\n          </div>\n\n          <div className=\"responsive_info\">\n            <div className=\"character_info\">\n              <div className=\"character_name\">\n                <h1>{character.name}</h1>\n              </div>\n              <div className=\"character_fav_icon\">\n                <img src={Favs} alt=\"Fav_Icon\" />\n              </div>\n            </div>\n\n            <div className=\"character_description\">\n              <p>Status: {character.status}</p>\n              <p>Species: {character.species}</p>\n              <p>Origin: {character.origin.name}</p>\n            </div>\n          </div>\n        </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DetailBanner;\n","import React from \"react\";\nimport \"../styles/slider.css\";\n\nconst Slider = ({ episodes, characterImage }) => {\n  const limitedEpisodes = episodes.slice(0, 20);\n\n  return (\n    <>\n      <div className=\"comic_container\">\n        <div className=\"comic\">\n          <h2 className=\"episode-title\">EPISODES</h2>\n        </div>\n        <div id=\"slider_content\">\n          {limitedEpisodes.length > 0 ? (\n            limitedEpisodes.map((episode) => (\n              <div className=\"slider_image_box\" key={episode.id}>\n                <img\n                  src={characterImage}\n                  alt={`Character in ${episode.name}`}\n                  className=\"episode-character-image\"\n                />\n                <div className=\"episode_box\">\n                  <h4>Episode {episode.id}</h4>\n                  <p>{episode.name}</p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No episodes found.</p>\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n\nexport default Slider;","import React, { useEffect, useContext} from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { CharacterContext } from \"../context/CharacterContext\";\nimport Navbar from \"../components/Navbar\";\nimport DetailBanner from \"../components/DetailBanner\";\nimport Slider from \"../components/Slider\";\n\nconst Details = () => {\n  const location = useLocation();\n  const { selectedCharacter, episodes, loading, error, selectCharacter } = useContext(CharacterContext);\n\n  // Get character from location state\n  const character = location.state.character;\n\n  useEffect(() => {\n    if (character) {\n      selectCharacter(character.id);\n    }\n  }, [character, selectCharacter]);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!selectedCharacter) return <div>No character selected</div>;\n\n  return (\n    <>\n      <Navbar />\n      <DetailBanner character={character} />\n      <Slider episodes={episodes} characterImage={character.image}/>\n    </>\n  );\n};\n\nexport default Details;\n"],"names":["DetailBanner","character","useLocation","state","_jsx","_Fragment","children","_jsxs","className","src","concat","image","alt","name","Favs","status","species","origin","_ref","episodes","characterImage","limitedEpisodes","slice","id","length","map","episode","Details","location","selectedCharacter","loading","error","selectCharacter","useContext","CharacterContext","useEffect","Navbar","Slider"],"sourceRoot":""}